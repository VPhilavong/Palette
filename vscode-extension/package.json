{
  "name": "code-palette-chatbot",
  "displayName": "Palette AI Chatbot",
  "description": "Modern chatbot interface for Palette AI with conversation memory and session management",
  "version": "0.2.0-chatbot",
  "publisher": "sail-project",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "main": "./out/extension-chatbot.js",
  "keywords": [
    "chatbot",
    "ai",
    "react",
    "ui",
    "components",
    "conversation"
  ],
  "activationEvents": [
    "onCommand:palette.openChatbot"
  ],
  "contributes": {
    "commands": [
      {
        "command": "palette.openChatbot",
        "title": "üé® Palette: Open AI Chatbot",
        "category": "Palette"
      },
      {
        "command": "palette.checkBackendStatus",
        "title": "üé® Palette: Check Backend Status",
        "category": "Palette"
      },
      {
        "command": "palette.stopChatbotServer",
        "title": "üé® Palette: Stop Chatbot Server",
        "category": "Palette"
      },
      {
        "command": "palette.openChatbotInBrowser",
        "title": "üé® Palette: Open Chatbot in Browser",
        "category": "Palette"
      },
      {
        "command": "palette.startBackendServer",
        "title": "üé® Palette: Start Backend Server",
        "category": "Palette"
      },
      {
        "command": "palette.createFileFromChatbot",
        "title": "üé® Palette: Create File (Internal)",
        "category": "Palette"
      },
      {
        "command": "palette.openModernChatbot",
        "title": "üé® Palette: Open Modern AI Assistant",
        "category": "Palette",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "palette.showSettingsMenu",
        "title": "‚öôÔ∏è Palette: Settings Menu",
        "category": "Palette"
      },
      {
        "command": "palette.configureApiKeys",
        "title": "üîë Palette: Configure API Keys",
        "category": "Palette"
      },
      {
        "command": "palette.selectModel",
        "title": "ü§ñ Palette: Select AI Model",
        "category": "Palette"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "palette.openChatbot"
        },
        {
          "command": "palette.checkBackendStatus"
        },
        {
          "command": "palette.stopChatbotServer"
        },
        {
          "command": "palette.openChatbotInBrowser"
        },
        {
          "command": "palette.startBackendServer"
        },
        {
          "command": "palette.createFileFromChatbot",
          "when": "false"
        },
        {
          "command": "palette.openModernChatbot"
        }
      ],
      "editor/context": [
        {
          "command": "palette.openChatbot",
          "group": "palette",
          "when": "editorHasSelection"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "palette-sidebar",
          "title": "Palette AI",
          "icon": "resources/palette-icon.svg"
        }
      ]
    },
    "views": {
      "palette-sidebar": [
        {
          "type": "webview",
          "id": "palette.modernChatbot",
          "name": "AI Assistant",
          "when": "true"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "palette.modernChatbot",
        "contents": "# üé® Palette AI Assistant\n\nBuild beautiful UIs with conversational design.\n\n**Quick Examples:**\n‚Ä¢ \"Create a modern landing page with hero section\"\n‚Ä¢ \"Build a dashboard with sidebar and charts\"\n‚Ä¢ \"Design a product page with image gallery\"\n\n[‚öôÔ∏è Configure API Key](command:palette.showSettingsMenu)\n\nStart chatting once your API key is set up!"
      }
    ],
    "configuration": {
      "title": "Palette AI Chatbot",
      "properties": {
        "palette.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key for Palette AI generation",
          "scope": "application"
        },
        "palette.anthropicApiKey": {
          "type": "string",
          "default": "",
          "description": "Anthropic API Key for Claude models",
          "scope": "application"
        },
        "palette.defaultModel": {
          "type": "string",
          "default": "gpt-4o-mini",
          "description": "Default AI model to use for generation",
          "enum": [
            "gpt-4o-mini",
            "gpt-4o",
            "gpt-3.5-turbo",
            "gpt-5",
            "gpt-5-mini",
            "gpt-5-2025-08-07",
            "claude-3-5-sonnet-20241022",
            "claude-3-5-haiku-20241022",
            "claude-3-opus-20240229"
          ]
        },
        "palette.enableStreaming": {
          "type": "boolean",
          "default": true,
          "description": "Enable streaming responses for better user experience"
        },
        "palette.backendUrl": {
          "type": "string",
          "default": "http://localhost:8765",
          "description": "Palette backend server URL"
        },
        "palette.maxConversationLength": {
          "type": "number",
          "default": 100,
          "description": "Maximum number of messages to keep in conversation history",
          "minimum": 10,
          "maximum": 500
        },
        "palette.enableMemoryPersistence": {
          "type": "boolean",
          "default": true,
          "description": "Enable persistent conversation memory across VS Code sessions"
        },
        "palette.autoDetectProject": {
          "type": "boolean",
          "default": true,
          "description": "Automatically detect and analyze project context"
        },
        "palette.maxTokens": {
          "type": "number",
          "default": 2000,
          "description": "Maximum tokens for AI responses",
          "minimum": 100,
          "maximum": 32000
        },
        "palette.temperature": {
          "type": "number",
          "default": 0.7,
          "description": "AI model temperature (creativity level)",
          "minimum": 0,
          "maximum": 2
        },
        "palette.analysisDepth": {
          "type": "string",
          "enum": ["shallow", "normal", "deep"],
          "default": "normal",
          "description": "Project analysis depth"
        },
        "palette.cacheAnalysis": {
          "type": "boolean",
          "default": true,
          "description": "Cache project analysis for better performance"
        },
        "palette.logLevel": {
          "type": "string",
          "enum": ["error", "warn", "info", "debug"],
          "default": "info",
          "description": "Logging level for debugging"
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc -p .",
    "watch": "tsc -w -p ."
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^2.0.1",
    "@ai-sdk/openai": "^2.0.5",
    "@langchain/community": "^0.3.50",
    "@langchain/core": "^0.3.68",
    "@langchain/openai": "^0.6.6",
    "@vscode-elements/elements": "^2.0.1",
    "ai": "^5.0.8",
    "dotenv": "^17.2.1",
    "langchain": "^0.3.30",
    "openai": "^4.28.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/dotenv": "^6.1.1",
    "@types/node": "^18.19.121",
    "@types/vscode": "^1.60.0",
    "typescript": "^5.9.2"
  },
  "author": "",
  "license": "ISC"
}
