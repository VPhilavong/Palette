{
  "name": "code-palette-chatbot",
  "displayName": "Palette AI Chatbot",
  "description": "Modern chatbot interface for Palette AI with conversation memory and session management",
  "version": "0.2.0-chatbot",
  "publisher": "sail-project",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "AI",
    "Other"
  ],
  "main": "./out/extension.js",
  "keywords": [
    "chatbot",
    "ai",
    "react",
    "ui",
    "components",
    "conversation"
  ],
  "activationEvents": [
    "onCommand:palette.openModernChatbot"
  ],
  "contributes": {
    "commands": [
      {
        "command": "palette.openModernChatbot",
        "title": "üé® Palette: Open Modern AI Assistant",
        "category": "Palette",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "palette.showSettingsMenu",
        "title": "‚öôÔ∏è Palette: Settings Menu",
        "category": "Palette"
      },
      {
        "command": "palette.configureApiKeys",
        "title": "üîë Palette: Configure API Keys",
        "category": "Palette"
      },
      {
        "command": "palette.selectModel",
        "title": "ü§ñ Palette: Select AI Model",
        "category": "Palette"
      },
      {
        "command": "palette.mcp.status",
        "title": "üîå Palette: MCP Status",
        "category": "Palette"
      },
      {
        "command": "palette.mcp.configure",
        "title": "‚öôÔ∏è Palette: Configure MCP",
        "category": "Palette"
      },
      {
        "command": "palette.mcp.restart",
        "title": "üîÑ Palette: Restart MCP",
        "category": "Palette"
      },
      {
        "command": "palette.mcp.setupGuide",
        "title": "üìñ Palette: MCP Setup Guide",
        "category": "Palette"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "palette.openChatbot"
        },
        {
          "command": "palette.checkBackendStatus"
        },
        {
          "command": "palette.stopChatbotServer"
        },
        {
          "command": "palette.openChatbotInBrowser"
        },
        {
          "command": "palette.startBackendServer"
        },
        {
          "command": "palette.createFileFromChatbot",
          "when": "false"
        },
        {
          "command": "palette.openModernChatbot"
        }
      ],
      "editor/context": [
        {
          "command": "palette.openChatbot",
          "group": "palette",
          "when": "editorHasSelection"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "palette-sidebar",
          "title": "Palette AI",
          "icon": "$(paintcan)"
        }
      ]
    },
    "views": {
      "palette-sidebar": [
        {
          "type": "webview",
          "id": "palette.modernChatbot",
          "name": "AI Assistant",
          "icon": "$(comment-discussion)",
          "when": "true"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "palette.modernChatbot",
        "contents": "# üé® Palette AI Assistant\n\nBuild beautiful UIs with conversational design.\n\n**Quick Examples:**\n‚Ä¢ \"Create a modern landing page with hero section\"\n‚Ä¢ \"Build a dashboard with sidebar and charts\"\n‚Ä¢ \"Design a product page with image gallery\"\n\n[‚öôÔ∏è Configure API Key](command:palette.showSettingsMenu)\n\nStart chatting once your API key is set up!"
      }
    ],
    "configuration": [
      {
        "title": "Palette AI Chatbot",
        "properties": {
          "palette.openaiApiKey": {
            "type": "string",
            "default": "",
            "description": "OpenAI API Key for Palette AI generation",
            "scope": "application"
          },
          "palette.defaultModel": {
            "type": "string",
            "default": "gpt-5-mini-2025-08-07",
            "description": "Default AI model to use for generation",
            "enum": [
              "gpt-5-2025-08-07",
              "gpt-5-mini-2025-08-07",
              "gpt-5-nano-2025-08-07"
            ]
          },
          "palette.enableStreaming": {
            "type": "boolean",
            "default": true,
            "description": "Enable streaming responses for better user experience"
          },
          "palette.backendUrl": {
            "type": "string",
            "default": "http://localhost:8765",
            "description": "Palette backend server URL"
          },
          "palette.maxConversationLength": {
            "type": "number",
            "default": 100,
            "description": "Maximum number of messages to keep in conversation history",
            "minimum": 10,
            "maximum": 500
          },
          "palette.enableMemoryPersistence": {
            "type": "boolean",
            "default": true,
            "description": "Enable persistent conversation memory across VS Code sessions"
          },
          "palette.autoDetectProject": {
            "type": "boolean",
            "default": true,
            "description": "Automatically detect and analyze project context"
          },
          "palette.maxTokens": {
            "type": "number",
            "default": 2000,
            "description": "Maximum tokens for AI responses",
            "minimum": 100,
            "maximum": 32000
          },
          "palette.temperature": {
            "type": "number",
            "default": 0.7,
            "description": "AI model temperature (creativity level)",
            "minimum": 0,
            "maximum": 2
          },
          "palette.analysisDepth": {
            "type": "string",
            "enum": [
              "shallow",
              "normal",
              "deep"
            ],
            "default": "normal",
            "description": "Project analysis depth"
          },
          "palette.cacheAnalysis": {
            "type": "boolean",
            "default": true,
            "description": "Cache project analysis for better performance"
          },
          "palette.logLevel": {
            "type": "string",
            "enum": [
              "error",
              "warn",
              "info",
              "debug"
            ],
            "default": "info",
            "description": "Logging level for debugging"
          }
        }
      },
      {
        "title": "MCP (Model Context Protocol)",
        "properties": {
          "palette.mcp.enabled": {
            "type": "boolean",
            "default": true,
            "description": "Enable MCP (Model Context Protocol) server integration",
            "scope": "window"
          },
          "palette.mcp.servers": {
            "type": "array",
            "default": [
              {
                "name": "filesystem",
                "description": "File system operations and directory management",
                "command": "npx",
                "args": [
                  "-y",
                  "@modelcontextprotocol/server-filesystem",
                  "/tmp"
                ],
                "enabled": true,
                "autoStart": false,
                "tools": [
                  "read_file",
                  "write_file",
                  "create_directory",
                  "list_directory",
                  "move_file",
                  "search_files"
                ],
                "resources": [
                  "file",
                  "directory"
                ]
              },
              {
                "name": "git",
                "description": "Git version control operations",
                "command": "npx",
                "args": [
                  "-y",
                  "@modelcontextprotocol/server-git"
                ],
                "enabled": false,
                "autoStart": false,
                "tools": [
                  "git_status",
                  "git_add",
                  "git_commit",
                  "git_log",
                  "git_diff",
                  "git_branch"
                ],
                "resources": [
                  "repository",
                  "commit",
                  "branch"
                ]
              },
              {
                "name": "shadcn-ui",
                "description": "shadcn/ui component management and installation",
                "command": "node",
                "args": [],
                "enabled": false,
                "autoStart": false,
                "tools": [
                  "install_component",
                  "list_components",
                  "update_component"
                ],
                "resources": [
                  "component",
                  "theme"
                ]
              }
            ],
            "description": "MCP server configurations",
            "scope": "window",
            "editPresentation": "multilineText",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Unique server name"
                },
                "description": {
                  "type": "string",
                  "description": "Human-readable server description"
                },
                "command": {
                  "type": "string",
                  "description": "Command to start the server"
                },
                "args": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Command-line arguments"
                },
                "env": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Environment variables"
                },
                "workingDirectory": {
                  "type": "string",
                  "description": "Working directory for the server process"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the server is enabled"
                },
                "autoStart": {
                  "type": "boolean",
                  "description": "Whether to start the server automatically"
                },
                "tools": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Available tool names"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Available resource types"
                }
              },
              "required": [
                "name",
                "command",
                "enabled",
                "autoStart"
              ]
            }
          },
          "palette.mcp.maxRetries": {
            "type": "number",
            "default": 3,
            "minimum": 0,
            "maximum": 10,
            "description": "Maximum number of connection retry attempts",
            "scope": "window"
          },
          "palette.mcp.retryDelay": {
            "type": "number",
            "default": 5000,
            "minimum": 1000,
            "maximum": 30000,
            "description": "Initial retry delay in milliseconds (uses exponential backoff)",
            "scope": "window"
          },
          "palette.mcp.connectionTimeout": {
            "type": "number",
            "default": 10000,
            "minimum": 5000,
            "maximum": 60000,
            "description": "Connection timeout in milliseconds",
            "scope": "window"
          },
          "palette.mcp.healthCheckInterval": {
            "type": "number",
            "default": 30000,
            "minimum": 10000,
            "maximum": 300000,
            "description": "Health check interval in milliseconds",
            "scope": "window"
          },
          "palette.mcp.autoRestart": {
            "type": "boolean",
            "default": true,
            "description": "Automatically restart failed servers",
            "scope": "window"
          },
          "palette.mcp.fallbackMode": {
            "type": "string",
            "enum": [
              "disabled",
              "graceful",
              "always"
            ],
            "default": "graceful",
            "description": "Fallback behavior when MCP servers are unavailable",
            "scope": "window"
          },
          "palette.mcp.showSetupGuide": {
            "type": "boolean",
            "default": true,
            "description": "Show setup guidance for unconfigured MCP servers",
            "scope": "window"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-production",
    "compile": "tsc -p .",
    "watch": "tsc -w -p .",
    "esbuild": "node esbuild.config.js",
    "esbuild-watch": "node esbuild.config.js --watch",
    "esbuild-production": "node esbuild.config.js --production",
    "package": "npm run esbuild-production && vsce package",
    "deploy": "npm run esbuild-production && vsce publish"
  },
  "dependencies": {
    "@ai-sdk/openai": "^2.0.6",
    "@langchain/community": "^0.3.50",
    "@langchain/core": "^0.3.68",
    "@langchain/openai": "^0.6.6",
    "@vscode-elements/elements": "^2.0.1",
    "@vscode-elements/react-elements": "^1.15.1",
    "ai": "^5.0.8",
    "dotenv": "^17.2.1",
    "langchain": "^0.3.30",
    "openai": "^4.28.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/dotenv": "^6.1.1",
    "@types/node": "^18.19.121",
    "@types/vscode": "^1.60.0",
    "@vscode-elements/webview-playground": "^1.9.0",
    "esbuild": "^0.25.8",
    "typescript": "^5.9.2"
  },
  "author": "",
  "license": "ISC"
}
