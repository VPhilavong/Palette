[
  {
    "id": "medium-todo-app",
    "name": "Todo List Application",
    "description": "Interactive todo list with add, complete, delete, and filter functionality",
    "message": "Create a todo list app with add, complete, delete and filter (all/active/completed) functionality",
    "complexity": "medium",
    "expected_files": [
      "src/components/TodoApp.tsx",
      "src/components/TodoItem.tsx",
      "src/components/TodoList.tsx",
      "src/components/TodoFilters.tsx"
    ],
    "expected_components": [
      "TodoApp",
      "TodoItem",
      "TodoList",
      "TodoFilters"
    ],
    "expected_features": [
      "State management with useState/useReducer",
      "Local storage persistence",
      "Filter functionality",
      "CRUD operations"
    ],
    "test_project_type": "vite-react-shadcn",
    "estimated_duration": 120,
    "validation_criteria": {
      "functionality": "Should support all CRUD operations",
      "persistence": "Should save todos to localStorage",
      "filtering": "Should filter todos by status",
      "state": "Should manage complex state correctly"
    },
    "tags": [
      "app",
      "state-management",
      "crud",
      "interactive"
    ]
  },
  {
    "id": "medium-image-gallery",
    "name": "Image Gallery with Modal",
    "description": "Responsive image gallery with lightbox modal for viewing full-size images",
    "message": "Create a responsive image gallery with thumbnail grid and modal lightbox for viewing full-size images",
    "complexity": "medium",
    "expected_files": [
      "src/components/ImageGallery.tsx",
      "src/components/ImageModal.tsx",
      "src/components/ImageThumbnail.tsx"
    ],
    "expected_components": [
      "ImageGallery",
      "ImageModal",
      "ImageThumbnail"
    ],
    "expected_features": [
      "Responsive grid layout",
      "Modal overlay",
      "Navigation between images",
      "Keyboard accessibility"
    ],
    "test_project_type": "vite-react-shadcn",
    "estimated_duration": 90,
    "validation_criteria": {
      "responsive": "Should adapt to different screen sizes",
      "accessibility": "Should support keyboard navigation",
      "performance": "Should optimize image loading",
      "ux": "Should provide smooth transitions"
    },
    "tags": [
      "gallery",
      "modal",
      "responsive",
      "media"
    ]
  },
  {
    "id": "medium-data-table",
    "name": "Data Table with Sorting",
    "description": "Data table component with sorting, pagination, and search functionality",
    "message": "Create a data table that displays user data with sorting, pagination, and search functionality",
    "complexity": "medium",
    "expected_files": [
      "src/components/DataTable.tsx",
      "src/components/TableHeader.tsx",
      "src/components/TablePagination.tsx",
      "src/components/TableSearch.tsx"
    ],
    "expected_components": [
      "DataTable",
      "TableHeader",
      "TablePagination",
      "TableSearch"
    ],
    "expected_features": [
      "Column sorting",
      "Pagination controls",
      "Search/filter functionality",
      "Responsive design"
    ],
    "test_project_type": "vite-react-shadcn",
    "estimated_duration": 110,
    "validation_criteria": {
      "sorting": "Should sort data by columns",
      "pagination": "Should paginate large datasets",
      "search": "Should filter data by search term",
      "performance": "Should handle large datasets efficiently"
    },
    "tags": [
      "table",
      "data",
      "sorting",
      "pagination"
    ]
  },
  {
    "id": "edge-next-js",
    "name": "Next.js App Router Page",
    "description": "Test generation with Next.js App Router structure",
    "message": "Create a blog page with posts listing and individual post view using Next.js App Router",
    "complexity": "medium",
    "expected_files": [
      "app/blog/page.tsx",
      "app/blog/[slug]/page.tsx",
      "components/BlogCard.tsx",
      "components/BlogPost.tsx"
    ],
    "expected_components": [
      "BlogCard",
      "BlogPost"
    ],
    "expected_features": [
      "Next.js App Router structure",
      "Dynamic routes",
      "Server components"
    ],
    "test_project_type": "next-shadcn",
    "estimated_duration": 100,
    "validation_criteria": {
      "structure": "Should follow Next.js App Router conventions",
      "routing": "Should implement dynamic routing correctly",
      "ssr": "Should work with server-side rendering"
    },
    "tags": [
      "next-js",
      "app-router",
      "dynamic-routes"
    ]
  },
  {
    "id": "edge-accessibility",
    "name": "High Accessibility Component",
    "description": "Test generation with explicit accessibility requirements",
    "message": "Create a modal dialog component with full ARIA support, keyboard navigation, and screen reader compatibility",
    "complexity": "medium",
    "expected_files": [
      "src/components/AccessibleModal.tsx"
    ],
    "expected_components": [
      "AccessibleModal"
    ],
    "expected_features": [
      "Full ARIA support",
      "Keyboard navigation",
      "Focus management",
      "Screen reader compatibility"
    ],
    "test_project_type": "vite-react-shadcn",
    "estimated_duration": 80,
    "validation_criteria": {
      "aria": "Should have proper ARIA attributes",
      "keyboard": "Should support full keyboard navigation",
      "focus": "Should manage focus correctly",
      "screenreader": "Should work with screen readers"
    },
    "tags": [
      "accessibility",
      "modal",
      "aria",
      "keyboard-nav"
    ]
  }
]